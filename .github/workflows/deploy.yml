name: Deploy API

on:
  push:
    branches: [main]
    paths:
      - ".github/workflows/deploy.yml"
      - "apps/server/**"
      - "packages/**" 
      - "tsconfig.*"
      - "package.json"
      - "pnpm-lock.yaml" 

jobs:
  api-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node & pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm" 

      - name: Global Turbo
        run: pnpm install -g turbo

      - name: Install deps
        run: pnpm install

      - name: Build API
        run: pnpm turbo run build --filter="@repo/server"
      
      - name: Checking build output
        run: ls -R apps/server/dist || true

      - name: Pack release folder
        run: |
          RELEASE=api-release
          mkdir -p $RELEASE
          cp -r apps/server/dist $RELEASE/
          cp apps/server/package.json $RELEASE/
          cp pnpm-lock.yaml $RELEASE/
          tar -czf api-release.tar.gz $RELEASE

      - name: Upload to Droplet
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: root
          key: ${{ secrets.DROPLET_SSH_KEY }}
          source: "api-release.tar.gz"
          target: "/server"

      - name: Extract & (re)start PM2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: root
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            set -e
            cd /server
            tar -xzf api-release.tar.gz
            mv /server/.env /server/api-release/.env || true
            cd api-release && pnpm install --prod
            if pm2 describe cdl-api > /dev/null; then
              pm2 reload cdl-api --update-env
            else
              pm2 start ecosystem.config.cjs
              pm2 save
            fi

